<%- include("../../views/partials/user/header") %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout - Quick Sip</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            padding: 20px 0;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
        }

        .header h1 {
            color: #2c3e50;
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 10px;
        }

        .header p {
            color: #7f8c8d;
            font-size: 1.1rem;
        }

        .checkout-wrapper {
            display: grid;
            grid-template-columns: 1fr 400px;
            gap: 40px;
            align-items: start;
        }

        .checkout-form {
            background: white;
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            backdrop-filter: blur(10px);
        }

        .order-summary {
            background: white;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            position: sticky;
            top: 20px;
        }

        .section-title {
            color: #2c3e50;
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 25px;
            padding-bottom: 10px;
            border-bottom: 2px solid #ecf0f1;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }

        label {
            display: block;
            color: #2c3e50;
            font-weight: 500;
            margin-bottom: 8px;
            font-size: 0.95rem;
        }

        input, select, textarea {
            width: 100%;
            padding: 15px;
            border: 2px solid #ecf0f1;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #fafbfc;
        }

        input:focus, select:focus, textarea:focus {
            outline: none;
            border-color: #71cd14;
            background: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(113, 205, 20, 0.2);
        }

        .product-item {
            display: flex;
            align-items: center;
            padding: 20px 0;
            border-bottom: 1px solid #ecf0f1;
        }

        .product-item:last-child {
            border-bottom: none;
        }

        .product-image {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #74b9ff, #0984e3);
            border-radius: 15px;
            margin-right: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            color: white;
        }

        .product-details {
            flex: 1;
        }

        .product-name {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 5px;
        }

        .product-specs {
            color: #7f8c8d;
            font-size: 0.9rem;
        }

        .product-price {
            font-weight: 700;
            color: #71cd14;
            font-size: 1.1rem;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
            gap: 10px;
            margin: 10px 0;
        }

        .qty-btn {
            width: 30px;
            height: 30px;
            border: none;
            background: #71cd14;
            color: white;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            transition: all 0.3s ease;
        }

        .qty-btn:hover {
            background: #5ba511;
            transform: scale(1.1);
        }

        .qty-input {
            width: 50px;
            text-align: center;
            padding: 5px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        .summary-row {
            display: flex;
            justify-content: space-between;
            margin-bottom: 15px;
            color: #2c3e50;
        }

        .summary-row.total {
            font-size: 1.2rem;
            font-weight: 700;
            color: #71cd14;
            padding-top: 15px;
            border-top: 2px solid #ecf0f1;
        }

        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 10px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .btn-primary {
            background: #2c3e50;
            color: white;
            width: 100%;
            padding: 18px;
            font-size: 1.1rem;
            margin-top: 20px;
        }

        .btn-primary:hover {
            background: #1a232d;
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(113, 205, 20, 0.3);
        }

        .btn-secondary {
            background: transparent;
            color: #71cd14;
            border: 2px solid #71cd14;
            margin-right: 15px;
        }

        .btn-secondary:hover {
            background: #71cd14;
            color: white;
            transform: translateY(-2px);
        }

        .payment-methods {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }

        .payment-method {
            padding: 15px;
            border: 2px solid #ecf0f1;
            border-radius: 10px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: white;
        }

        .payment-method:hover, .payment-method.active {
            border-color: #71cd14;
            background: #f8fff8;
            transform: translateY(-2px);
        }

        .security-badges {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 20px;
            opacity: 0.7;
        }

        .security-badge {
            padding: 8px 15px;
            background: #34495e;
            color: white;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }

        .progress-bar {
            width: 100%;
            height: 6px;
            background: #ecf0f1;
            border-radius: 3px;
            margin-bottom: 30px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, #71cd14, #5ba511);
            width: 75%;
            border-radius: 3px;
            animation: progressAnimation 2s ease-in-out;
        }

        @keyframes progressAnimation {
            from { width: 0%; }
            to { width: 75%; }
        }

        .discount-code {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }

        .discount-input {
            flex: 1;
        }

        .apply-btn {
            background: #2c3e50;
            color: white;
            border: none;
            padding: 15px 20px;
            border-radius: 10px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .apply-btn:hover {
            background: #1a2631;
        }

        @media (max-width: 768px) {
            .checkout-wrapper {
                grid-template-columns: 1fr;
                gap: 20px;
            }
            
            .form-row {
                grid-template-columns: 1fr;
            }
            
            .checkout-form, .order-summary {
                padding: 25px;
            }
            
            .header h1 {
                font-size: 2rem;
            }
        }

        .animate-in {
            animation: slideInUp 0.6s ease-out;
        }

        /* Address Section Styles */
        .address-item {
            margin-bottom: 15px;
            position: relative;
            padding-left: 30px;
        }

        .address-item input[type="radio"] {
            position: absolute;
            left: 0;
            top: 5px;
            width: 18px;
            height: 18px;
            accent-color: #2c3e50;
        }

        .address-item label {
            display: block;
            padding: 10px 15px;
            background: #f8f9fa;
            border-radius: 8px;
            border: 1px solid #e0e0e0;
            cursor: pointer;
            transition: all 0.2s ease;
        }

        .address-item input[type="radio"]:checked + label {
            border-color: #71cd14;
            background: #f0fff0;
            box-shadow: 0 0 0 1px #71cd14;
        }

        .address-item label strong {
            color: #2c3e50;
            font-size: 1rem;
            display: block;
            margin-bottom: 5px;
        }

        .address-item label br {
            display: none;
        }

        .address-item label {
            color: #5a6c7d;
            font-size: 0.9rem;
            line-height: 1.5;
        }

        #address-list > p {
            text-align: center;
            padding: 20px;
            color: #7f8c8d;
            background: #f8f9fa;
            border-radius: 8px;
        }

        /* Add New Address Button */
        #address-list + button {
            width: 100%;
            padding: 15px;
            background: #2c3e50;
            color: white;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            margin-top: 10px;
            transition: all 0.2s ease;
        }

        #address-list + button:hover {
            background: #131b23;
            transform: translateY(-2px);
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background-color: white;
            border-radius: 15px;
            width: 100%;
            max-width: 600px;
            max-height: 90vh;
            overflow-y: auto;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.2);
            animation: modalFadeIn 0.3s ease-out;
        }

        @keyframes modalFadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
        }

        .modal-header h2 {
            color: #2c3e50;
            font-size: 1.8rem;
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 1.8rem;
            cursor: pointer;
            color: #7f8c8d;
            transition: all 0.2s ease;
        }

        .close-btn:hover {
            color: #e74c3c;
            transform: rotate(90deg);
        }

        .modal-footer {
            display: flex;
            justify-content: flex-end;
            gap: 15px;
            margin-top: 30px;
            padding-top: 20px;
            border-top: 1px solid #ecf0f1;
        }

        /* COD Checkbox Fix */
        .cod-option {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .cod-option input[type="checkbox"] {
            width: 18px;
            height: 18px;
            accent-color: #71cd14;
        }

        .cod-option label {
            margin-bottom: 0;
            cursor: pointer;
        }

        /* Address Actions */
        .address-actions {
            display: flex;
            gap: 10px;
            margin-top: 10px;
        }

        .edit-address-btn {
            padding: 5px 10px;
            font-size: 0.8rem;
            border-radius: 5px;
            border: none;
            cursor: pointer;
            background-color: #3498db;
            color: white;
        }

        /* Breadcrumb Styles */
        .breadcrumb {
            margin-bottom: 20px;
            font-size: 0.95rem;
            color: #7f8c8d;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .breadcrumb-link {
            color: #2c3e50;
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .breadcrumb-link:hover {
            color: #71cd14;
        }

        .breadcrumb-separator {
            color: #7f8c8d;
        }

        .breadcrumb-current {
            color: #2c3e50;
            font-weight: 600;
        }

    </style>
</head>
<body>
    
    <div class="container">
        <div class="header animate-in">
            <h1>Checkout</h1>
            <p>Complete your order for premium water bottles</p>
        </div>

    <!-- Breadcrumb Navigation -->
    <div class="breadcrumb animate-in" style="background-color: #a9b7c5;">
        <a href="/" class="breadcrumb-link">Home</a>
        <span class="breadcrumb-separator">></span>
        <a href="/cart" class="breadcrumb-link">Cart</a>
        <span class="breadcrumb-separator">></span>
        <span class="breadcrumb-current">Checkout</span>
    </div>

    <div class="progress-bar">
            <div class="progress-fill"></div>
        </div>

        <div class="checkout-wrapper">
            <div class="checkout-form animate-in">
                <!-- Address Section Exactly as Requested -->
                <h2>Choose Shipping Address</h2>
                <div id="address-list">
                  <% if (addresses.length > 0) { %>
                    <% addresses.forEach(function(addr, idx) { %>
                      <div class="address-item">
                        <input type="radio" name="selectedAddress" id="addr-<%= idx %>" value="<%= addr._id || idx %>" <%= idx === 0 ? "checked" : "" %> >
                        <label for="addr-<%= idx %>">
                          <strong><%= addr.name %></strong>
                          <%= addr.addressType %>, <%= addr.landMark %>
                          <%= addr.city %>, <%= addr.state %> - <%= addr.pincode %>
                          Phone: <%= addr.phone %> <% if (addr.altPhone) { %> | Alt: <%= addr.altPhone %> <% } %>
                          <div class="address-actions">
                            <button class="edit-address-btn" onclick="openEditAddressModal('<%= addr._id %>')">Edit</button>
                          </div>
                        </label>
                      </div>
                    <% }) %>
                  <% } else { %>
                    <p>No saved addresses found. Please add a new address.</p>
                  <% } %>
                </div>
                
                <button onclick="openAddAddressModal()">Add New Address</button>

                <h2 class="section-title" style="margin-top: 40px;">Payment Method</h2>
                
                <div class="payment-methods">
                    <div class="payment-method active" data-method="card">
                        💳<br>Card
                    </div>
                    <div class="payment-method" data-method="paypal">
                        📱<br>PayPal
                    </div>
                    <div class="payment-method" data-method="cod">
                        💵<br>Cash on Delivery
                    </div>
                </div>

                <div id="cardDetails" style="margin-top: 25px;">
                    <div class="form-group">
                        <label for="cardNumber">Card Number</label>
                        <input type="text" id="cardNumber" name="cardNumber" placeholder="1234 5678 9012 3456">
                    </div>
                    <div class="form-row">
                        <div class="form-group">
                            <label for="expiry">Expiry Date</label>
                            <input type="text" id="expiry" name="expiry" placeholder="MM/YY">
                        </div>
                        <div class="form-group">
                            <label for="cvv">CVV</label>
                            <input type="text" id="cvv" name="cvv" placeholder="123">
                        </div>
                    </div>
                </div>

                <div id="codDetails" style="margin-top: 25px; display: none;">
                    <div class="cod-option">
                        <input type="checkbox" id="confirmCod" checked>
                        <label for="confirmCod">I understand that I'll pay when the order is delivered</label>
                    </div>
                    <p style="margin-top: 10px; color: #666; font-size: 0.9rem;">
                        Note: Cash on Delivery may have additional charges. Please check the order summary.
                    </p>
                </div>

                <div class="security-badges">
                    
                    <div class="security-badge">✅ Verified</div>
                    <div class="security-badge">🛡️ Protected</div>
                </div>
            </div>

            <div class="order-summary animate-in">
                <h2 class="section-title">Order Summary</h2>
                
                <div class="product-item">
                    <div class="product-image">💧</div>
                    <div class="product-details">
                        <div class="product-name">EcoFlow Steel Bottle</div>
                        <div class="product-specs">750ml • Stainless Steel • Blue</div>
                        <div class="quantity-controls">
                            <button class="qty-btn" onclick="updateQuantity('item1', -1)">−</button>
                            <input type="number" class="qty-input" id="qty-item1" value="2" min="1" onchange="updatePrice()">
                            <button class="qty-btn" onclick="updateQuantity('item1', 1)">+</button>
                        </div>
                    </div>
                    <div class="product-price" id="price-item1">$59.98</div>
                </div>

                <div class="product-item">
                    <div class="product-image">🌿</div>
                    <div class="product-details">
                        <div class="product-name">BambooFlow Bottle</div>
                        <div class="product-specs">500ml • Bamboo Fiber • Green</div>
                        <div class="quantity-controls">
                            <button class="qty-btn" onclick="updateQuantity('item2', -1)">−</button>
                            <input type="number" class="qty-input" id="qty-item2" value="1" min="1" onchange="updatePrice()">
                            <button class="qty-btn" onclick="updateQuantity('item2', 1)">+</button>
                        </div>
                    </div>
                    <div class="product-price" id="price-item2">$24.99</div>
                </div>

                <div class="discount-code">
                    <input type="text" class="discount-input" placeholder="Discount code">
                    <button class="apply-btn" onclick="applyDiscount()">Apply</button>
                </div>

                <div style="margin-top: 25px;">
                    <div class="summary-row">
                        <span>Subtotal:</span>
                        <span id="subtotal">$84.97</span>
                    </div>
                    <div class="summary-row">
                        <span>Shipping:</span>
                        <span id="shipping">$8.99</span>
                    </div>
                    <div class="summary-row">
                        <span>Tax:</span>
                        <span id="tax">$7.50</span>
                    </div>
                    <div class="summary-row" id="cod-charge-row" style="display: none;">
                        <span>COD Charge:</span>
                        <span id="cod-charge">$2.99</span>
                    </div>
                    <div class="summary-row" id="discount-row" style="display: none; color: #71cd14;">
                        <span>Discount:</span>
                        <span id="discount">-$0.00</span>
                    </div>
                    <div class="summary-row total">
                        <span>Total:</span>
                        <span id="total">$101.46</span>
                    </div>
                </div>

                <div style="margin-top: 30px;">
                    <button class="btn btn-secondary" onclick="goBack()">← Back to Cart</button>
                    <button class="btn btn-primary" onclick="processPayment()">
                        Complete Order 🚀
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Address Modal -->
    <div id="addAddressModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Add New Address</h2>
                <button class="close-btn" onclick="closeModal('addAddressModal')">&times;</button>
            </div>
            <form id="addAddressForm" action="/checkoutAddAddress" method="POST">
            <div class="form-group">
                <label for="add-name">Full Name *</label>
                <input type="text" id="add-name" name="name" required 
                    pattern="[A-Za-z ]{2,}" 
                    title="Name should contain only letters and spaces (min 2 characters)">
            </div>
            <div class="form-group">
                <label for="add-phone">Phone Number *</label>
                <input type="tel" id="add-phone" name="phone" required 
                    pattern="[0-9]{10}" 
                    title="10 digit phone number">
            </div>
            <div class="form-group">
                <label for="add-alt-phone">Alternate Phone (Optional)</label>
                <input type="tel" id="add-alt-phone" name="altPhone" 
                    pattern="[0-9]{10}" 
                    title="10 digit phone number (optional)">
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label for="add-address-type">Address Type *</label>
                    <select id="add-address-type" name="addressType" required>
                        <option value="Home">Home</option>
                        <option value="Work">Work</option>
                        <option value="Other">Other</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="add-landmark">Landmark *</label>
                    <input type="text" id="add-landmark" name="landMark" required
                        minlength="3" 
                        title="Landmark should be at least 3 characters">
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label for="add-city">City *</label>
                    <input type="text" id="add-city" name="city" required
                        pattern="[A-Za-z ]+" 
                        title="City name should contain only letters and spaces">
                </div>
                <div class="form-group">
                    <label for="add-state">State *</label>
                    <input type="text" id="add-state" name="state" required
                        pattern="[A-Za-z ]+" 
                        title="State name should contain only letters and spaces">
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label for="add-pincode">Pincode *</label>
                    <input type="text" id="add-pincode" name="pincode" required
                        pattern="[0-9]{6}" 
                        title="6 digit pincode">
                </div>
                <div class="form-group">
                    <label for="add-country">Country *</label>
                    <input type="text" id="add-country" name="country" 
                        value="India" required readonly>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeModal('addAddressModal')">Cancel</button>
                <button type="submit" class="btn btn-primary">Save Address</button>
            </div>
        </form>
        </div>
    </div>

    <!-- Edit Address Modal -->
    <div id="editAddressModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2>Edit Address</h2>
                <button class="close-btn" onclick="closeModal('editAddressModal')">&times;</button>
            </div>
            <form id="editAddressForm">
                <input type="hidden" id="edit-id" name="id">
                <div class="form-group">
                    <label for="edit-name">Full Name</label>
                    <input type="text" id="edit-name" name="name" required>
                </div>
                <div class="form-group">
                    <label for="edit-phone">Phone Number</label>
                    <input type="tel" id="edit-phone" name="phone" required>
                </div>
                <div class="form-group">
                    <label for="edit-alt-phone">Alternate Phone (Optional)</label>
                    <input type="tel" id="edit-alt-phone" name="altPhone">
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="edit-address-type">Address Type</label>
                        <select id="edit-address-type" name="addressType" required>
                            <option value="Home">Home</option>
                            <option value="Work">Work</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="edit-landmark">Landmark</label>
                        <input type="text" id="edit-landmark" name="landMark" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="edit-city">City</label>
                        <input type="text" id="edit-city" name="city" required>
                    </div>
                    <div class="form-group">
                        <label for="edit-state">State</label>
                        <input type="text" id="edit-state" name="state" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="edit-pincode">Pincode</label>
                        <input type="text" id="edit-pincode" name="pincode" required>
                    </div>
                    <div class="form-group">
                        <label for="edit-country">Country</label>
                        <input type="text" id="edit-country" name="country" required>
                    </div>
                </div>
                <!-- <div class="form-group">
                    <label for="edit-is-default">
                        <input type="checkbox" id="edit-is-default" name="isDefault"> Set as default address
                    </label>
                </div> -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" onclick="closeModal('editAddressModal')">Cancel</button>
                    <button type="submit" class="btn btn-primary">Update Address</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Initialize addresses from backend (passed via EJS)
        const addresses = <%- JSON.stringify(addresses) %>;

        // Modal functions
        function openAddAddressModal() {
            document.getElementById('addAddressModal').style.display = 'flex';
            document.getElementById('addAddressForm').reset();
        }

        function openEditAddressModal(addressId) {
            // Find address by _id (MongoDB ObjectId as string)
            const address = addresses.find(addr => addr._id == addressId);
            if (address) {
                document.getElementById('edit-id').value = address._id;
                document.getElementById('edit-name').value = address.name || '';
                document.getElementById('edit-phone').value = address.phone || '';
                document.getElementById('edit-alt-phone').value = address.altPhone || '';
                document.getElementById('edit-address-type').value = address.addressType || 'Home';
                document.getElementById('edit-landmark').value = address.landMark || '';
                document.getElementById('edit-city').value = address.city || '';
                document.getElementById('edit-state').value = address.state || '';
                document.getElementById('edit-pincode').value = address.pincode || '';
                document.getElementById('edit-country').value = address.country || 'United States';
                
                
                document.getElementById('editAddressModal').style.display = 'flex';
            } else {
                console.error('Address not found:', addressId);
                alert('Error: Address not found.');
            }
        }

        function closeModal(modalId) {
            document.getElementById(modalId).style.display = 'none';
        }

        document.getElementById('addAddressForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const form = e.target;
            const formData = new FormData(form);
            const submitBtn = form.querySelector('button[type="submit"]');
            
            submitBtn.disabled = true;
            submitBtn.innerHTML = 'Saving...';
            
            try {
                const response = await fetch('/checkoutAddAddress', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(Object.fromEntries(formData))
                });
                
                const result = await response.json();
                
                if (!result.status) {
                    throw new Error(result.message);
                }
                
                closeModal('addAddressModal');
                window.location.href = '/checkout'; 
                
            } catch (error) {
                alert(error.message);
            } finally {
                submitBtn.disabled = false;
                submitBtn.innerHTML = 'Save Address';
            }
        });

        document.getElementById('editAddressForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const form = e.target;
        const formData = new FormData(form);
        const submitBtn = form.querySelector('button[type="submit"]');
        
        submitBtn.disabled = true;
        submitBtn.innerHTML = 'Updating...';
        
        try {
            const name = formData.get('name').trim();
            const phone = formData.get('phone').trim();
            const altPhone = formData.get('altPhone')?.trim();
            const city = formData.get('city').trim();
            const state = formData.get('state').trim();
            const pincode = formData.get('pincode').trim();
            const landMark = formData.get('landMark').trim();
            const addressType = formData.get('addressType').trim();
            
            if (!name || !phone || !city || !state || !pincode || !landMark || !addressType) {
                throw new Error('Please fill all required fields');
            }
            
            if (!/^[A-Za-z ]{2,}$/.test(name)) {
                throw new Error('Name should contain only letters and spaces (min 2 characters)');
            }
            
            if (!/^\d{10}$/.test(phone)) {
                throw new Error('Phone number must be 10 digits');
            }
            
            if (altPhone && !/^\d{10}$/.test(altPhone)) {
                throw new Error('Alternate phone must be 10 digits');
            }
            
            if (!/^\d{6}$/.test(pincode)) {
                throw new Error('Pincode must be 6 digits');
            }
            
            const response = await fetch(`/checkoutEditAddress/${formData.get('id')}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(Object.fromEntries(formData))
            });
            
            const result = await response.json();
            
            if (!result.status) {
                throw new Error(result.message || 'Failed to update address');
            }
            
            closeModal('editAddressModal');
            window.location.reload(); 
            
        } catch (error) {
            alert(error.message);
        } finally {
            submitBtn.disabled = false;
            submitBtn.innerHTML = 'Update Address';
        }
    });

        function renderAddresses() {
            const addressList = document.getElementById('address-list');
            
            if (addresses.length > 0) {
                let html = '';
                addresses.forEach((addr, idx) => {
                    html += `
                    <div class="address-item">
                        <input type="radio" name="selectedAddress" id="addr-${idx}" value="${addr._id}" ${idx === 0 ? "checked" : ""}>
                        <label for="addr-${idx}">
                            <strong>${addr.name}</strong>
                            ${addr.addressType}, ${addr.landMark}
                            ${addr.city}, ${addr.state} - ${addr.pincode}
                            Phone: ${addr.phone} ${addr.altPhone ? `| Alt: ${addr.altPhone}` : ''}
                            <div class="address-actions">
                                <button class="edit-address-btn" onclick="openEditAddressModal('${addr._id}')">Edit</button>
                            </div>
                        </label>
                    </div>
                    `;
                });
                addressList.innerHTML = html;
            } else {
                addressList.innerHTML = '<p>No saved addresses found. Please add a new address.</p>';
            }
        }

        // Handle address selection
        document.addEventListener('change', function(e) {
            if (e.target.name === 'selectedAddress') {
                console.log('Selected address:', e.target.value);
                // Here you could update shipping costs based on selected address
            }
        });

        // Animation on load
        document.addEventListener('DOMContentLoaded', function() {
            const elements = document.querySelectorAll('.animate-in');
            elements.forEach((el, index) => {
                setTimeout(() => {
                    el.style.opacity = '1';
                    el.style.transform = 'translateY(0)';
                }, index * 200);
            });
            
            // Initialize prices
            updatePrice();
        });

        // Payment method selection
        document.querySelectorAll('.payment-method').forEach(method => {
            method.addEventListener('click', function() {
                document.querySelectorAll('.payment-method').forEach(m => m.classList.remove('active'));
                this.classList.add('active');
                
                const cardDetails = document.getElementById('cardDetails');
                const codDetails = document.getElementById('codDetails');
                const codChargeRow = document.getElementById('cod-charge-row');
                
                if (this.dataset.method === 'card') {
                    cardDetails.style.display = 'block';
                    codDetails.style.display = 'none';
                    codChargeRow.style.display = 'none';
                    updatePrice();
                } else if (this.dataset.method === 'cod') {
                    cardDetails.style.display = 'none';
                    codDetails.style.display = 'block';
                    codChargeRow.style.display = 'flex';
                    updatePrice();
                } else {
                    cardDetails.style.display = 'none';
                    codDetails.style.display = 'none';
                    codChargeRow.style.display = 'none';
                    updatePrice();
                }
            });
        });

        // Quantity management
        function updateQuantity(itemId, change) {
            const qtyInput = document.getElementById('qty-' + itemId);
            const currentQty = parseInt(qtyInput.value);
            const newQty = Math.max(1, currentQty + change);
            qtyInput.value = newQty;
            updatePrice();
        }

        function updatePrice() {
            const item1Qty = parseInt(document.getElementById('qty-item1').value);
            const item2Qty = parseInt(document.getElementById('qty-item2').value);
            
            const item1Price = 29.99 * item1Qty;
            const item2Price = 24.99 * item2Qty;
            
            document.getElementById('price-item1').textContent = '$' + item1Price.toFixed(2);
            document.getElementById('price-item2').textContent = '$' + item2Price.toFixed(2);
            
            const subtotal = item1Price + item2Price;
            const shipping = subtotal > 50 ? 0 : 8.99;
            
            // Check if COD is selected
            const isCOD = document.querySelector('.payment-method[data-method="cod"]').classList.contains('active');
            const codCharge = isCOD ? 2.99 : 0;
            
            const tax = subtotal * 0.088;
            const total = subtotal + shipping + tax + codCharge;
            
            document.getElementById('subtotal').textContent = '$' + subtotal.toFixed(2);
            document.getElementById('shipping').textContent = shipping === 0 ? 'FREE' : '$' + shipping.toFixed(2);
            document.getElementById('tax').textContent = '$' + tax.toFixed(2);
            document.getElementById('cod-charge').textContent = '$' + codCharge.toFixed(2);
            document.getElementById('total').textContent = '$' + total.toFixed(2);
        }

        function applyDiscount() {
            const discountInput = document.querySelector('.discount-input');
            const discountCode = discountInput.value.trim();
            
            if (!discountCode) {
                alert('Please enter a discount code');
                return;
            }
            
            // In a real app, you would validate the discount code with your backend
            const discountRow = document.getElementById('discount-row');
            const discountAmount = document.getElementById('discount');
            discountRow.style.display = 'flex';
            discountAmount.textContent = '-$10.00';
            
            const currentTotal = parseFloat(document.getElementById('total').textContent.replace('$', ''));
            document.getElementById('total').textContent = '$' + (currentTotal - 10).toFixed(2);
            
            discountInput.value = '';
        }

        function processPayment() {
            const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');
            
            if (!selectedAddress && addresses.length > 0) {
                alert('Please select a shipping address');
                return;
            }
            
            const paymentMethod = document.querySelector('.payment-method.active').dataset.method;
            
            if (paymentMethod === 'cod') {
                if (!document.getElementById('confirmCod').checked) {
                    alert('Please confirm Cash on Delivery terms');
                    return;
                }
                
                placeCODOrder();
            } else if (paymentMethod === 'card') {
                const cardNumber = document.getElementById('cardNumber').value;
                const expiry = document.getElementById('expiry').value;
                const cvv = document.getElementById('cvv').value;
                
                if (!cardNumber || !expiry || !cvv) {
                    alert('Please enter complete card details');
                    return;
                }
                
                processCardPayment();
            } else {
                // For other payment methods like PayPal
                alert(`Redirecting to ${paymentMethod} payment...`);
                // In a real app, you would redirect to the payment gateway
            }
        }

        function placeCODOrder() {
            const btn = event.target;
            btn.innerHTML = '⏳ Placing Order...';
            btn.disabled = true;
            
            setTimeout(() => {
                // In a real app, you would submit the form to your backend
                window.location.href = '/order-success?cod=true';
            }, 2000);
        }

        function processCardPayment() {
            const btn = event.target;
            btn.innerHTML = '⏳ Processing Payment...';
            btn.disabled = true;
            
            setTimeout(() => {
                // Simulate successful payment
                window.location.href = '/order-success';
            }, 3000);
        }

        function goBack() {
            window.history.back();
        }

        // Input formatting
        document.getElementById('cardNumber').addEventListener('input', function(e) {
            e.target.value = e.target.value.replace(/\s/g, '').replace(/(.{4})/g, '$1 ').trim();
        });

        document.getElementById('expiry').addEventListener('input', function(e) {
            e.target.value = e.target.value.replace(/\D/g, '').replace(/(\d{2})(\d)/, '$1/$2');
        });

        // Close modal when clicking outside
        window.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                e.target.style.display = 'none';
            }
        });
    </script>
</body>
</html>
<%- include("../../views/partials/user/footer") %>
