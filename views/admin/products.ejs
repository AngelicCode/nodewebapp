<!DOCTYPE html>
<html lang="en">
<head>
  <%- include("../../views/partials/admin/header") %>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <style>
    :root {
      --primary-color: #0B6E8F;
      --primary-dark: #095673;
      --secondary-color: #E5F4F9;
      --accent-color: #72C1D9;
      --text-color: #2C3E50;
      --background-color: #F8FCFF;
      --border-radius: 8px;
      --card-shadow: 0 8px 20px rgba(11, 110, 143, 0.08);
    }

    body {
      font-family: 'Montserrat', sans-serif;
      background-color: var(--background-color);
      color: var(--text-color);
    }

    .content-main {
      padding: 2rem;
      background: linear-gradient(to bottom, #F8FCFF 0%, #E5F4F9 100%);
    }

    .water-wave-header {
      background: linear-gradient(135deg, var(--primary-color) 0%, #3498db 100%);
      border-radius: var(--border-radius);
      box-shadow: var(--card-shadow);
      padding: 2rem;
      margin-bottom: 2rem;
      position: relative;
      overflow: hidden;
    }

    .water-wave-header::before {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 40px;
      background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1200 120' preserveAspectRatio='none'%3E%3Cpath d='M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z' opacity='.25' fill='%23FFFFFF'%3E%3C/path%3E%3Cpath d='M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z' opacity='.5' fill='%23FFFFFF'%3E%3C/path%3E%3Cpath d='M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z' fill='%23FFFFFF'%3E%3C/path%3E%3C/svg%3E") no-repeat;
      background-size: cover;
    }

    .content-title {
      color: white;
      font-weight: 700;
      letter-spacing: 0.5px;
      position: relative;
      z-index: 1;
      font-size: 2rem;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .water-icon {
      position: absolute;
      right: 30px;
      top: 20px;
      width: 100px;
      height: 100px;
      opacity: 0.2;
      color: white;
    }

    .card {
      border: none;
      border-radius: var(--border-radius);
      box-shadow: var(--card-shadow);
      overflow: hidden;
      background: #fff;
      margin-bottom: 2rem;
    }

    .card-header {
      background-color: white;
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
      padding: 1.5rem;
    }
    
    .card-body {
      padding: 2rem;
    }

    .search-container {
      background-color: white;
      border-radius: 30px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
      padding: 5px;
      max-width: 500px;
      margin: 0 auto 2rem;
      display: flex;
    }

    .search-container input {
      border: none;
      flex-grow: 1;
      padding: 12px 20px;
      border-radius: 30px;
      font-size: 0.9rem;
    }

    .search-container button {
      border-radius: 30px;
      padding: 10px 25px;
      margin: 5px;
      background-color: var(--primary-color);
      color: white;
      border: none;
      font-weight: 600;
    }

    .search-container button:hover {
      background-color: var(--primary-dark);
    }

    .table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
    }

    .table th {
      background-color: var(--secondary-color);
      color: var(--primary-color);
      font-weight: 600;
      text-transform: uppercase;
      font-size: 0.75rem;
      letter-spacing: 0.5px;
      padding: 15px 12px;
    }

    .table td {
      padding: 15px 12px;
      vertical-align: middle;
      border-top: none;
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
      font-size: 0.9rem;
    }

    .table tr:hover {
      background-color: rgba(11, 110, 143, 0.02);
    }

    .btn {
      border-radius: var(--border-radius);
      font-weight: 600;
      padding: 8px 15px;
      transition: all 0.3s ease;
      letter-spacing: 0.3px;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      text-decoration: none;
      margin: 0 2px;
    }

    .btn-primary {
      background-color: var(--primary-color);
      border: none;
      color: white;
    }

    .btn-primary:hover {
      background-color: var(--primary-dark);
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(11, 110, 143, 0.2);
    }

    .btn-success {
      background-color: #2ecc71;
      border: none;
      color: white;
    }

    .btn-success:hover {
      background-color: #27ae60;
      transform: translateY(-2px);
    }

    .btn-danger {
      background-color: #e74c3c;
      border: none;
      color: white;
    }

    .btn-danger:hover {
      background-color: #c0392b;
      transform: translateY(-2px);
    }

    .btn-info {
      background-color: var(--accent-color);
      border: none;
      color: white;
    }

    .btn-info:hover {
      background-color: #5daecc;
      transform: translateY(-2px);
    }

    .action-buttons {
      display: flex;
      justify-content: center;
      gap: 5px;
    }

    .badge {
      padding: 6px 10px;
      border-radius: var(--border-radius);
      font-weight: 600;
      font-size: 0.8rem;
    }

    .bg-success {
      background-color: #2ecc71;
      color: white;
    }

    .bg-light {
      background-color: #f8f9fa;
      color: #495057;
    }

    .pagination-container {
      text-align: center;
      margin-top: 30px;
      margin-bottom: 30px;
    }

    .pagination a,
    .pagination .current-page {
      display: inline-block;
      padding: 10px 16px;
      margin: 0 5px;
      border: none;
      border-radius: var(--border-radius);
      text-decoration: none;
      color: var(--text-color);
      background-color: white;
      box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
      transition: all 0.3s ease;
    }

    .pagination a:hover, 
    .pagination .current-page {
      background-color: var(--primary-color);
      color: white;
      box-shadow: 0 5px 15px rgba(11, 110, 143, 0.2);
    }

    @media (max-width: 768px) {
      .content-main {
        padding: 1rem;
      }

      .card-body {
        padding: 1rem;
      }

      .table-responsive {
        overflow-x: auto;
      }

      .search-container {
        flex-direction: column;
        padding: 10px;
      }

      .search-container input,
      .search-container button {
        width: 100%;
        margin: 5px 0;
      }
      
      .action-buttons {
        flex-direction: column;
      }
    }
  </style>
</head>

<body>
  <section class="content-main" style="padding: 0rem;">
    <div class="water-wave-header">
      <h2 class="content-title">Products Management</h2>
      <svg class="water-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12,20.5c-3.31,0-6-2.69-6-6c0-4.5,6-10.5,6-10.5s6,6,6,10.5C18,17.81,15.31,20.5,12,20.5z M12,5.5 c-1.44,2.16-4,6.38-4,9c0,2.21,1.79,4,4,4s4-1.79,4-4C16,11.88,13.44,7.66,12,5.5z"/>
        <path d="M12,18.5c-2.21,0-4-1.79-4-4c0-0.55,0.45-1,1-1s1,0.45,1,1c0,1.1,0.9,2,2,2s2-0.9,2-2c0-0.55,0.45-1,1-1s1,0.45,1,1 C16,16.71,14.21,18.5,12,18.5z"/>
      </svg>
    </div>

    <!-- Search Bar -->
    <div class="search-container">
      <form action="/admin/products" method="get" style="display: flex; width: 100%;">
        <input type="text" placeholder="Search products or brands" name="search" />
        <button type="submit">Search</button>
      </form> 
    </div>

    <!-- Table -->
    <div class="card">
      <div class="card-body">
        <div class="table-responsive">
          <table class="table">
            <thead>
              <tr>
                <th>Product name</th>
                <th>Brand</th>
                <th>Category</th>
                <th>Sale Price</th>
                <th>Offer Price</th>
                <th>Offer</th>
                <th>Quantity</th>
                <th>Action</th>
                <th>Edit</th>
              </tr>
            </thead>
            <tbody>
              <%for(let i=0;i<data.length;i++){%>
              <tr>
                <td><%=data[i].productName%></td>
                <td><%= data[i].brand.brandName %></td>

                <td><%=data[i].category.name%></td>
                <td><%=data[i].salePrice%></td>
                <td>
                  <span class="badge bg-success">â‚¹999</span>
                </td>
                <td>
                  <div class="action-buttons">
                    <a href="#" class="btn btn-success btn-sm">Add Offer</a>
                    <a href="#" class="btn btn-info btn-sm">Remove</a>
                  </div>
                </td>
                <td><%= data[i].quantity %></td>
                <td>

                  <div class="action-buttons">
                    <button id="btn-<%= data[i]._id %>"
                            class="btn btn-sm <%= data[i].isBlocked ? 'btn-success' : 'btn-danger' %>"
                            onclick="toggleProductBlock('<%= data[i]._id %>', `<%= data[i].isBlocked ? '\'unblockProduct\'' : '\'blockProduct\'' %>`)">
                      <%= data[i].isBlocked ? 'Unblock' : 'Block' %>
                    </button>
                  </div>
                  
                  
                </td>
                <td>
                  <a href="/admin/editProduct?id=<%=data[i]._id%>" class="btn btn-primary btn-sm">Edit</a>
                </td>
              </tr>
              
              
              <%}%>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Pagination -->
    <div class="container mt-3">
      <nav aria-label="Page navigation">
          <ul class="pagination justify-content-center mb-20" style="margin-right: 200px;">
   
   
              <% for (let i = 1; i <= totalPages; i++) { %>
              <li class="page-item <%=(i === currentPage) ? 'active' : '' %>">
                  <a class="page-link" href="?page=<%= i %>"><%= i %></a>
              </li>
              <% } %>
   
   
          </ul>
      </nav>
   </div>
   
   
  </section>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

  <script>
    function toggleProductStatus(productId, isBlocked, button) {
      // Placeholder for the actual implementation
      const action = isBlocked ? 'block' : 'unblock';
      
      Swal.fire({
        icon: "success",
        title: "Status Updated",
        text: `Product is now ${isBlocked ? 'blocked' : 'unblocked'}`,
        timer: 1500,
        showConfirmButton: false
      });
      
      // Update the button dynamically
      if (isBlocked) {
        button.innerText = "Unblock";
        button.className = "btn btn-success btn-sm";
        button.setAttribute("onclick", `toggleProductStatus('${productId}', false, this)`);
      } else {
        button.innerText = "Block";
        button.className = "btn btn-danger btn-sm";
        button.setAttribute("onclick", `toggleProductStatus('${productId}', true, this)`);
      }
    }
    
    function addOffer(productId) {
      // Placeholder for adding offer functionality
      Swal.fire({
        title: 'Add Offer',
        input: 'number',
        inputLabel: 'Enter offer price',
        showCancelButton: true,
        confirmButtonText: 'Add',
        inputValidator: (value) => {
          if (!value || value <= 0) {
            return 'Please enter a valid price';
          }
        }
      }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire({
            icon: 'success',
            title: 'Offer Added',
            text: `Offer price of â‚¹${result.value} has been added`,
            timer: 1500,
            showConfirmButton: false
          });
        }
      });
    }
    
    function removeOffer(productId) {
      // Placeholder for removing offer functionality
      Swal.fire({
        title: 'Remove Offer',
        text: 'Are you sure you want to remove the offer?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, remove it!'
      }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire({
            icon: 'success',
            title: 'Offer Removed',
            text: 'The offer has been removed successfully',
            timer: 1500,
            showConfirmButton: false
          });
        }
      });
    }
  </script>
  <script>
    // Check for success/error messages in URL parameters
    document.addEventListener('DOMContentLoaded', function() {
      const urlParams = new URLSearchParams(window.location.search);
      const success = urlParams.get('success');
      const error = urlParams.get('error');
  
      if (success) {
        Swal.fire({
          icon: 'success',
          title: 'Success!',
          text: success,
          timer: 2000,
          showConfirmButton: false
        });
        // Clean the URL
        window.history.replaceState({}, document.title, window.location.pathname);
      }
  
      if (error) {
        Swal.fire({
          icon: 'error',
          title: 'Error!',
          text: error,
          timer: 2000,
          showConfirmButton: false
        });
        // Clean the URL
        window.history.replaceState({}, document.title, window.location.pathname);
      }
    });
  </script>
  <script>
    async function toggleProductBlock(productId, action) {
      try {
        
        if(action[0] == "'"){

          action = action.slice(1,action.length-1)
        }
        
        const response = await fetch(`/admin/${action}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ id: productId })
        });

         // First check if the response is OK
          if (!response.ok) {
            const errorText = await response.text();
            throw new Error(`Server responded with ${response.status}: ${errorText}`);
          }

        const result = await response.json();
  
        if (result.success) {
          const button = document.querySelector(`#btn-${productId}`);
          button.textContent = result.isBlocked ? "Unblock" : "Block";
          button.className = result.isBlocked ? "btn btn-success" : "btn btn-danger";
          button.setAttribute("onclick", `toggleProductBlock('${productId}', '${result.isBlocked ? "unblockProduct" : "blockProduct"}')`);

          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: `Product ${result.isBlocked ? 'blocked' : 'unblocked'} successfully`,
            timer: 1500,
            showConfirmButton: false
          });

        } else {
          throw new Error(result.error || "Failed to update product status");
        }
        action = ""
      } catch (error) {
        console.error("Error:", error);
        Swal.fire({
          icon: 'error',
          title: 'Error!',
          text: error.message || "An error occurred while updating the product.",
          timer: 2000,
          showConfirmButton: false
        });
      }
    }
  </script>
  

  <%- include("../../views/partials/admin/footer") %>
</body>
</html>