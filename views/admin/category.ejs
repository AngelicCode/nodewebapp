<!DOCTYPE html>
<html lang="en">
<head>
  <%- include("../../views/partials/admin/header") %>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <style>
    :root {
      --primary-color: #0B6E8F;
      --primary-dark: #095673;
      --secondary-color: #E5F4F9;
      --accent-color: #72C1D9;
      --text-color: #2C3E50;
      --background-color: #F8FCFF;
      --border-radius: 8px;
      --card-shadow: 0 8px 20px rgba(11, 110, 143, 0.08);
    }

    body {
      font-family: 'Montserrat', sans-serif;
      background-color: var(--background-color);
      color: var(--text-color);
    }

    .content-main {
      padding: 2rem;
      background: linear-gradient(to bottom, #F8FCFF 0%, #E5F4F9 100%);
    }

    .water-wave-header {
      background: linear-gradient(135deg, var(--primary-color) 0%, #3498db 100%);
      border-radius: var(--border-radius);
      box-shadow: var(--card-shadow);
      padding: 2rem;
      margin-bottom: 2rem;
      position: relative;
      overflow: hidden;
    }

    .water-wave-header::before {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 40px;
      background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1200 120' preserveAspectRatio='none'%3E%3Cpath d='M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z' opacity='.25' fill='%23FFFFFF'%3E%3C/path%3E%3Cpath d='M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z' opacity='.5' fill='%23FFFFFF'%3E%3C/path%3E%3Cpath d='M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z' fill='%23FFFFFF'%3E%3C/path%3E%3C/svg%3E") no-repeat;
      background-size: cover;
    }

    .content-title {
      color: white;
      font-weight: 700;
      letter-spacing: 0.5px;
      position: relative;
      z-index: 1;
      font-size: 2rem;
      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .water-icon {
      position: absolute;
      right: 30px;
      top: 20px;
      width: 100px;
      height: 100px;
      opacity: 0.2;
      color: white;
    }

    .card {
      border: none;
      border-radius: var(--border-radius);
      box-shadow: var(--card-shadow);
      overflow: hidden;
      background: #fff;
      margin-bottom: 2rem;
    }

    .card-header {
      background-color: white;
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
      padding: 1.5rem;
    }

    .card-body {
      padding: 2rem;
    }

    .form-label {
      font-weight: 600;
      color: var(--text-color);
      margin-bottom: 10px;
      font-size: 0.9rem;
    }

    .form-control, textarea {
      width: 100%;
      padding: 12px 15px;
      margin-bottom: -1px;
      border: 1px solid #e1e5eb;
      border-radius: var(--border-radius);
      transition: all 0.3s ease;
      font-size: 0.9rem;
    }

    .form-control:focus, textarea:focus {
      border-color: var(--primary-color);
      box-shadow: 0 0 0 3px rgba(11, 110, 143, 0.15);
      outline: none;
    }

    .btn {
      border-radius: var(--border-radius);
      font-weight: 600;
      padding: 10px 18px;
      transition: all 0.3s ease;
      letter-spacing: 0.3px;
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }

    .btn-primary {
      background-color: var(--primary-color);
      border: none;
      color: white;
    }

    .btn-primary:hover {
      background-color: var(--primary-dark);
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(11, 110, 143, 0.2);
    }

    .btn-secondary {
      background-color: #e2e8f0;
      color: #4a5568;
      border: none;
    }

    .btn-secondary:hover {
      background-color: #d1d8e3;
    }

    .btn-success {
      background-color: #2ecc71;
      border: none;
      color: white;
    }

    .btn-success:hover {
      background-color: #27ae60;
    }

    .btn-warning {
      background-color: #f39c12;
      border: none;
      color: white;
    }

    .btn-warning:hover {
      background-color: #e67e22;
    }

    .btn-info {
      background-color: var(--accent-color);
      border: none;
      color: white;
    }

    .btn-info:hover {
      background-color: #5daecc;
    }

    .btn-block {
      width: 100%;
    }

    .table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
    }

    .table th {
      background-color: var(--secondary-color);
      color: var(--primary-color);
      font-weight: 600;
      text-transform: uppercase;
      font-size: 0.75rem;
      letter-spacing: 0.5px;
      padding: 15px 12px;
    }

    .table td {
      padding: 15px 12px;
      vertical-align: middle;
      border-top: none;
      border-bottom: 1px solid rgba(0, 0, 0, 0.05);
      font-size: 0.9rem;
    }

    .table tr:hover {
      background-color: rgba(11, 110, 143, 0.02);
    }

    .error-message {
      color: #e53e3e;
      font-size: 0.8rem;
      margin-top: 10px;
      margin-bottom: 10px;
    }

    .status-dropdown {
      background-color: var(--secondary-color);
      border-radius: var(--border-radius);
      font-size: 0.85rem;
      padding: 8px 12px;
      width: 100%;
    }

    .category-form-container {
      background-color: white;
      border-radius: var(--border-radius);
      box-shadow: var(--card-shadow);
      padding: 1.5rem;
      height: 100%;
    }

    .category-form-title {
      color: var(--primary-color);
      margin-bottom: 1.5rem;
      font-weight: 600;
      font-size: 1.2rem;
      position: relative;
      padding-bottom: 10px;
    }

    .category-form-title:after {
      content: '';
      position: absolute;
      left: 0;
      bottom: 0;
      width: 50px;
      height: 3px;
      background-color: var(--accent-color);
      border-radius: 2px;
    }

    .action-buttons {
      display: flex;
      gap: 5px;
    }

    .badge {
      padding: 6px 10px;
      border-radius: var(--border-radius);
      font-weight: 600;
      font-size: 0.8rem;
    }

    .bg-success {
      background-color: #2ecc71;
      color: white;
    }

    .bg-light {
      background-color: #f8f9fa;
      color: #495057;
    }

    .search-container {
      background-color: white;
      border-radius: 30px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
      /* padding: 5px; */
      width: 100%;
      max-width: 500px;
      margin: 0 auto 2rem;
  }

  .search-container form {
      display: flex;
      align-items: center;
      gap: 5px;
  }

  .search-container input {
      border: none;
      flex-grow: 1;
      padding: 12px 20px;
      border-radius: 30px;
      font-size: 0.9rem;
      outline: none;
      background-color: transparent;
  }

  .search-container button {
      border-radius: 30px;
      padding: 10px 25px;
      margin: 5px;
      background-color: var(--primary-color);
      color: white;
      border: none;
      font-weight: 600;
      cursor: pointer;
  }

  .search-container button:hover {
      background-color: var(--primary-dark);
  }

  .btn-clear {
      border-radius: 30px;
      padding: 10px 25px;
      margin: 5px;
      background-color: #6c757d;
      color: white;
      text-decoration: none;
      font-weight: 600;
      display: inline-block;
  }

  .btn-clear:hover {
      background-color: #5a6268;
  }

  @media (max-width: 768px) {
      .search-container form {
          flex-direction: column;
          gap: 10px;
      }
      
      .search-container input,
      .search-container button,
      .btn-clear {
          width: 100%;
          margin: 0;
          box-sizing: border-box;
      }
  }

    @media (max-width: 768px) {
      .content-main {
        padding: 1rem;
      }

      .card-body {
        padding: 1rem;
      }

      .form-control, textarea {
        font-size: 14px;
      }

      .table-responsive {
        overflow-x: auto;
      }

      .col-md-3, .col-md-8 {
        width: 100%;
        margin: 0;
        padding: 10px;
      }

      .category-form-container {
        margin-bottom: 2rem;
      }

      .action-buttons {
        flex-direction: column;
      }
    }
  </style>
</head>

<body>
  <section class="content-main" style="padding: 0rem;">
    <div class="water-wave-header">
      <h2 class="content-title">Category Management</h2>
      <svg class="water-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
        <path d="M12,20.5c-3.31,0-6-2.69-6-6c0-4.5,6-10.5,6-10.5s6,6,6,10.5C18,17.81,15.31,20.5,12,20.5z M12,5.5 c-1.44,2.16-4,6.38-4,9c0,2.21,1.79,4,4,4s4-1.79,4-4C16,11.88,13.44,7.66,12,5.5z"/>
        <path d="M12,18.5c-2.21,0-4-1.79-4-4c0-0.55,0.45-1,1-1s1,0.45,1,1c0,1.1,0.9,2,2,2s2-0.9,2-2c0-0.55,0.45-1,1-1s1,0.45,1,1 C16,16.71,14.21,18.5,12,18.5z"/>
      </svg>
    </div>

    <!-- Search Bar -->
    <div class="search-container">
      <form class="search-container" method="GET" action="/admin/category/" style="display: flex; width: 100%;">
        <input type="text" name="search" placeholder="Search categories..." value="<%= search || '' %>">
          <button type="submit">Search</button>
    
          <% if (search) { %>
            <a href="<%= req.originalUrl.split('?')[0] %>" class="btn-clear">Clear</a>
          <% } %>
      </form>
    </div>
    
    <!-- Form + Table -->
    <div class="card">
      <div class="card-body"> 
        <div class="row">
          <!-- Form -->
          <div class="col-md-3">
            <div class="category-form-container">
              <h4 class="category-form-title">Add New Category</h4>
              <form method="post" action="/admin/addCategory" onsubmit="return handleFormSubmit(event)">
                <div class="mb-3">
                  <label for="name" class="form-label">Category Name</label>
                  <input type="text" name="name" id="name" class="form-control" placeholder="e.g. Stainless Bottles" >
                  <div id="name-error" class="error-message"></div>
                </div>

                <div class="mb-3">
                  <label for="description" class="form-label">Description</label>
                  <textarea name="description" id="description" class="form-control" placeholder="Short description" rows="4" ></textarea>
                  <div id="description-error" class="error-message"></div>
                </div>

                <button class="btn btn-primary btn-block" type="submit">Create Category</button>
              </form>
            </div>
          </div>

          <!-- Table -->
          <div class="col-md-8 offset-md-1">
            <div class="table-responsive">
              <table class="table">
                <thead>
                  <tr>
                    <th>#</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Offer Price</th>
                    <th>Offer</th>
                    <th>Status</th>
                    <th>Actions</th>
                    <th>Edit</th>
                  </tr>
                </thead>
                <tbody>
                  <% categories.forEach((category, index) => { %>
                    <tr>
                      <td><%= index + 1 %></td>
                      <td><strong><%= category.name %></strong></td>
                      <td><%= category.description %></td>

                      <td>
                      <% if (category.categoryOffer && category.categoryOffer.percentage > 0) { %>
                        <span class="badge bg-success"><%= category.categoryOffer.percentage %>%</span>
                      <% } else { %>
                        <span class="badge bg-light">—</span>
                      <% } %>
                    </td>
                    <td>
                      <div class="action-buttons">
                        <button class="btn btn-success btn-sm" onclick="openCategoryOfferModal('<%= category._id %>', '<%= category.name %>')">Add</button>
                        <button class="btn btn-warning btn-sm" onclick="removeCategoryOffer('<%= category._id %>')">Remove</button>
                      </div>
                    </td>

                      <td>
                        <select style="padding: 10px 3px;" data-id="<%= category._id %>" class="form-control form-control-sm status-dropdown" disabled>
                          <option value="Listed" <%= category.isListed ? 'selected' : '' %>>Listed</option>
                          <option value="Unlisted" <%= !category.isListed ? 'selected' : '' %>>Unlisted</option>
                        </select>
                      </td>
                      <td>
                        <% if (category.isListed) { %>
                          <button class="btn btn-secondary btn-sm" onclick="toggleCategoryStatus('<%= category._id %>', false, this)">Unlist</button>
                        <% } else { %>
                          <button class="btn btn-info btn-sm" onclick="toggleCategoryStatus('<%= category._id %>', true, this)">List</button>
                        <% } %>
                      </td>
                      <td>
                        <a href="/admin/editCategory?id=<%= category._id %>" class="btn btn-primary btn-sm">Edit</a>
                      </td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Pagination -->
    <%-include("../partials/admin/pagination")%>

  </section>

  <!-- Category Offer Modal -->
<div class="modal fade" id="categoryOfferModal" tabindex="-1">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Add Category Offer</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
      </div>
      <div class="modal-body">
        <form id="categoryOfferForm">
          <input type="hidden" id="categoryId" name="categoryId">
          <div class="mb-3">
            <label class="form-label">Category: <span id="categoryNameDisplay"></span></label>
          </div>
          <div class="mb-3">
            <label class="form-label">Discount Percentage</label>
            <input type="number" class="form-control" id="categoryPercentage" name="percentage" min="1" max="100" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Start Date</label>
            <input type="datetime-local" class="form-control" id="categoryStartDate" name="startDate" required>
          </div>
          <div class="mb-3">
            <label class="form-label">End Date</label>
            <input type="datetime-local" class="form-control" id="categoryEndDate" name="endDate" required>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" onclick="submitCategoryOffer()">Add Offer</button>
      </div>
    </div>
  </div>
</div>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

  <script>
    function handleFormSubmit(event){
      event.preventDefault();
      if(!validateForm()) return;

      const name = document.getElementsByName("name")[0].value;
      const description = document.getElementById("description").value;

      fetch("/admin/addCategory", {
        method: "POST",
        headers: { "content-type": "application/json" },
        body: JSON.stringify({ name, description })
      })
      .then(response => {
        if (!response.ok) {
          return response.json().then(err => { throw new Error(err.error); });
        }
        return response.json();
      })
      .then(data => {
        location.reload();
      })
      .catch(error => {
        Swal.fire({
          icon: "error",
          title: "Oops",
          text: error.message === "Category already exists" 
            ? "Category already exists" 
            : "An error occurred while adding the category"
        });
      });
    }

    function validateForm(){
      clearErrorMessages();
      const name = document.getElementsByName("name")[0].value.trim();
      const description = document.getElementById("description").value.trim();
      let isValid = true;

      if(name === ""){
        displayErrorMessage("name-error", "Please enter a name");
        isValid = false;
      } else if(!/^[a-zA-Z\s]+$/.test(name)){
        displayErrorMessage("name-error", "Category name should contain only alphabetic characters");
        isValid = false;
      }

      if(description === ""){
        displayErrorMessage("description-error","Please enter a description");
        isValid = false;
      }

      return isValid;
    }

    function displayErrorMessage(elementId,message){
      const errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = "block";
    }

    function clearErrorMessages(){
      const errorElements = document.getElementsByClassName("error-message");
      Array.from(errorElements).forEach(element => {
        element.innerText = "";
        element.style.display = "none";
      });
    }

    function toggleCategoryStatus(categoryId, makeListed, button) {
  if (!categoryId) {
    Swal.fire({
      icon: "error",
      title: "Oops!",
      text: "Invalid category ID."
    });
    return;
  }

  const url = makeListed
    ? `/admin/listCategory?id=${categoryId}`
    : `/admin/unlistCategory?id=${categoryId}`;

  fetch(url, { method: "GET" })
    .then(response => {
      console.log("Response status:", response.status);
      if (!response.ok) {
        return response.json().then(err => {
          throw new Error(err.error || "Status update failed");
        });
      }
      return response.json();
    })
    .then(data => {
      const dropdown = document.querySelector(`select[data-id="${categoryId}"]`);
      if (dropdown) {
        dropdown.value = makeListed ? "Listed" : "Unlisted";
      }

      if (makeListed) {
        button.innerText = "Unlist";
        button.className = "btn btn-secondary btn-sm";
        button.setAttribute("onclick", `toggleCategoryStatus('${categoryId}', false, this)`);
      } else {
        button.innerText = "List";
        button.className = "btn btn-info btn-sm";
        button.setAttribute("onclick", `toggleCategoryStatus('${categoryId}', true, this)`);
      }

      Swal.fire({
        icon: "success",
        title: "Status Updated",
        text: `Category is now ${makeListed ? "Listed" : "Unlisted"}`,
        timer: 1500,
        showConfirmButton: false
      });
    })
    .catch(err => {
      console.error("Error:", err);
      Swal.fire({
        icon: "error",
        title: "Oops!",
        text: `Failed to update category status: ${err.message}`
      });
    });
}

// Category Offer Functions
function openCategoryOfferModal(categoryId, categoryName) {
  document.getElementById('categoryId').value = categoryId;
  document.getElementById('categoryNameDisplay').textContent = categoryName;
  
  const now = new Date();
  const tomorrow = new Date(now);
  tomorrow.setDate(tomorrow.getDate() + 1);
  
  document.getElementById('categoryStartDate').value = now.toISOString().slice(0, 16);
  document.getElementById('categoryEndDate').value = tomorrow.toISOString().slice(0, 16);
  
  new bootstrap.Modal(document.getElementById('categoryOfferModal')).show();
}

function submitCategoryOffer() {
  const formData = {
    categoryId: document.getElementById('categoryId').value,
    percentage: document.getElementById('categoryPercentage').value,
    startDate: document.getElementById('categoryStartDate').value,
    endDate: document.getElementById('categoryEndDate').value
  };

  fetch('/admin/add-category-offer', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(formData)
  })
  .then(response => response.json())
  .then(data => {
    if (data.error) throw new Error(data.error);
    Swal.fire('Success!', data.message, 'success');
    bootstrap.Modal.getInstance(document.getElementById('categoryOfferModal')).hide();
    setTimeout(() => location.reload(), 1500);
  })
  .catch(error => {
    Swal.fire('Error!', error.message, 'error');
  });
}

function removeCategoryOffer(categoryId) {
  Swal.fire({
    title: 'Remove Offer?',
    text: 'Are you sure you want to remove this category offer?',
    icon: 'warning',
    showCancelButton: true
  }).then((result) => {
    if (result.isConfirmed) {
      fetch(`/admin/remove-category-offer/${categoryId}`, {
        method: 'POST'
      })
      .then(response => response.json())
      .then(data => {
        if (data.error) throw new Error(data.error);
        Swal.fire('Success!', data.message, 'success');
        location.reload();
      })
      .catch(error => {
        Swal.fire('Error!', error.message, 'error');
      });
    }
  });
}

  </script>

  <%- include("../../views/partials/admin/footer") %>
</body>
</html>